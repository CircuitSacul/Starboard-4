[package]
name = "website"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
database = { path = "../database" }
errors = { path = "../errors", optional = true }
common = { path = "../common" }

actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", optional = true, features = ["macros"] }
console_error_panic_hook = "0.1"
cfg-if = "1"
http = { version = "0.2", optional = true }
leptos = { version = "0.4", features = ["nightly"] }
leptos_meta = { version = "0.4", features = ["nightly"] }
leptos_actix = { version = "0.4", optional = true }
leptos_router = { version = "0.4", features = ["nightly"] }
wasm-bindgen = "=0.2.87"
leptos_icons = { version = "0.0.15", features = [
    "FaChevronLeftSolid",
    "FaChevronRightSolid",
    "FaChevronDownSolid",
    "FaArrowUpRightFromSquareSolid",
    "FaPlusSolid",
    "FaXmarkSolid",
    "FaGearSolid",
    "FaBarsSolid",
    "FaCheckSolid",
    "FaCircleInfoSolid",
    "FaTriangleExclamationSolid",
    "FaCircleExclamationSolid",
    "FaHashtagSolid",
    "FaMessageRegular",
    "FaChartSimpleSolid",
    "FaStarSolid",
    "FaFilterSolid",
    "FaAtSolid",
    "FaAwardSolid",
    "FaRobotSolid",
] }
serde = "1.0.181"
once_cell = { version = "1.18.0", optional = true }
twilight-model = "0.15.2"
twilight-http = { version = "0.15.2", optional = true }
jwt-simple = { version = "0.11.6", optional = true }
oauth2 = { version = "4.4.1", optional = true }
dashmap = "5.5.0"
rand = "0.8.5"
tokio = { version = "1.30.0", optional = true }
emojis = "0.6.0"
serde_json = "1.0.105"
humantime = "2.1.0"

[features]
default = ["ssr", "hydrate", "csr"]
csr = ["leptos/csr", "leptos_meta/csr", "leptos_router/csr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = ["database/backend", "common/backend", "dep:errors", "dep:actix-files", "dep:actix-web", "dep:leptos_actix", "dep:once_cell", "dep:twilight-http", "dep:jwt-simple", "dep:oauth2", "leptos/ssr", "leptos_meta/ssr", "leptos_router/ssr", "dep:tokio"]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
output-name = "website"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/output.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "assets"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
